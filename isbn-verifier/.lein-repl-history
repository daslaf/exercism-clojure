(require '[isbn-verifier :as isbn] :reload)
(isbn/isbn? 5)
(isbn/isbn? 5.1)
(count "asd")
(clojure.string/replace "123-123" #"-" "")
(re-find #"[^\dX]" "123X")
(re-find #"[^\dX]" "123AX")
(true? nil)
(true? "a")
(nil? "a")
(not (nil? "a"))
(require '[isbn-verifier :as isbn] :reload)
(isbn/isbn? "A")
(isbn/isbn? "1234567890")
(re-find #"[^\dX]" "123AX")
(not (nil? (re-find #"[^\dX]" "123AX")))
(not (nil? (re-find #"[^\dX]" "123X")))
(require '[isbn-verifier :as isbn] :reload)
(isbn/isbn? "1234567890")
(isbn/isbn? "123456789A")
(isbn/isbn? "123456789X")
(isbn/isbn? "1234X6789X")
(require '[isbn-verifier :as isbn] :reload)
(isbn/isbn? "1234X6789X")
(require '[isbn-verifier :as isbn] :reload)
(isbn/isbn? "1234X6789X")
(isbn/isbn? "123456789X")
(require '[isbn-verifier :as isbn] :reload)
(isbn/isbn? "123456789X")
(isbn/isbn? "1234567X9X")
(zip [1 2 3] [4 5 6])
(vector '(1 2 3))
(vector 1 2 3)
(map + [1 2 3])
(map inc [1 2 3])
(map inc [1 2 3] [4 5 6])
(map vector "123" [4 5 6])
(range 1 10)
(range 1 11)
(range 11 1)
(into [] (range 1 11))
(into () (range 1 11))
(map vector "123" '(10 9 8))
(map vector (seq "123") '(10 9 8))
(map vector (map #(if (= % \X) 10 (Integer/parseInt (str %))) "123") '(10 9 8))
(Integer/parseInt \X)
(Integer/parseInt (str \X))
(Integer/parseInt (str "" \X))
(Integer/parseInt (str \1))
(map #(if (= % \X) 10 (Integer/parseInt (str %))) "123456789X")
(map #(if (= % \X) 10 (Integer/parseInt (str %))) "1234567891")
(into () (range 1 11))
(apply + [1 2])
(map (fn [x] (apply + x)) [[1 2] [3 4]])
(map #(apply + %) [[1 2] [3 4]])
(defn- valid-verifier? [isbn]
  (let [digits (map #(if (= % \X) 10 (Integer/parseInt (str %))) isbn)]
    (->> (map vector digits (into () (range 1 11)))
         (map #(apply + %))
         (reduce +))))
(valid-verifier? "123456789X")
(require '[isbn-verifier :as isbn] :reload)
(isbn/valid-verifier? "3598215088")
(require '[isbn-verifier :as isbn] :reload)
(isbn/valid-verifier? "3598215088")
(require '[isbn-verifier :as isbn] :reload)
(isbn/valid-verifier? "3598215088")
(require '[isbn-verifier :as isbn] :reload)
(isbn/valid-verifier? "3598215088")
(require '[isbn-verifier :as isbn] :reload)
(isbn/valid-verifier? "3598215088")
(require '[isbn-verifier :as isbn] :reload)
(isbn/valid-verifier? "3598215088")
